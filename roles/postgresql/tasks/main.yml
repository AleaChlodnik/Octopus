- name: Import the repository
  ansible.builtin.apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    state: present

- name: Add PostgreSQL's repository
  ansible.builtin.apt_repository:
    repo: deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main
    state: present

- name: Install PostgreSQL 16
  ansible.builtin.apt:
    name: postgresql-16
    state: present
    update_cache: yes

- name: Install PostgreSQL and other required packages
  apt:
    name: "{{ item }}"
  with_items:
    - postgresql-client
    - python3-psycopg2 # psycopg2 is a PostgreSQL adapter for Python
    - acl # setfacl is a utility for manipulating the access control lists (ACLs) of files

- name: Setup postgresql authentication
  copy:
    src: ../files/pg_hba.conf
    dest: /etc/postgresql/16/main/pg_hba.conf

- name: Set up postgresql schema
  copy:
    src: ../files/schema.sql
    dest: /tmp/schema.sql

- name:  start and enable postgresql
  systemd_service:
    name: postgresql
    state: started
    enabled: true

- name: Reload PostgreSQL service
  ansible.builtin.systemd:
    name: postgresql
    state: restarted

- name: Create database user
  become: true
  become_user: postgres
  postgresql_user:
    name: "{{ user_name_postgresql }}"
    password: "{{ user_password_postgresql }}"
    role_attr_flags: NOSUPERUSER,NOCREATEDB
    state: present

- name: Create the database
  become: true
  become_user: postgres
  postgresql_db:
    name: "{{ db_name }}"
    owner: "{{ user_name_postgresql }}"
    state: present

- name: Read the schema SQL script content
  ansible.builtin.slurp:
    src: /tmp/schema.sql
  register: schema_sql_content

- name: Decode the schema SQL script content
  ansible.builtin.set_fact:
    schema_sql: "{{ schema_sql_content['content'] | b64decode }}"

- name: Import the schema SQL script
  become: true
  become_user: postgres
  ansible.builtin.postgresql_query:
    db: "{{ db_name }}"
    query: "{{ schema_sql }}"
    login_user: "{{ user_name_postgresql }}"
    login_password: "{{ user_password_postgresql }}"